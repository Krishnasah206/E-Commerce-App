server:
  port: ${SERVER_PORT:8080}
#  servlet:
#    context-path: /api

spring:
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb+srv://Krishnasah2060:1xApK9aHaI3WerKE@cluster0.gsivoy1.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0}
      database: ${MONGODB_DATABASE:ecommerce}
      auto-index-creation: true

  mail:
    host: ${SPRING_MAIL_HOST:smtp.gmail.com}
    port: ${SPRING_MAIL_PORT:587}
    username: ${SPRING_MAIL_USERNAME:krishnasah2060@gmail.com}
    password: ${SPRING_MAIL_PASSWORD:hwlknutilqbopgns}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:pkc-l7pr2.ap-south-1.aws.confluent.cloud:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:recommendation-service}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      sasl.jaas.config: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="${KAFKA_API_KEY:FZ7CQAWVYV7DUCJ7}"
        password="${KAFKA_API_SECRET:cfltDHg7/WuqgvsKgRxOP49KIW68P7noab/L7if4lns1RhJpCSjMdF9IfcNm2v/g}";

frontend:
  origin: ${FRONTEND_ORIGIN:http://localhost:5173}

app:
  kafka:
    topic:
      product-views: ${KAFKA_PRODUCT_VIEWS_TOPIC:product_views}

  recommender:
    url: ${RECOMMENDER_URL:https://fastapi-recommendation-7d6c.onrender.com/recommend}
